/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Sender,
  SenderInterface,
} from "../../../contracts/Sender.sol/Sender";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "l1CrossDomainMessengerAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "text",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_TEXT_LENGTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "opReceiverContractAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "text",
        type: "string",
      },
    ],
    name: "doSendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "messenger",
    outputs: [
      {
        internalType: "contract IL1CrossDomainMessenger",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200104c3803806200104c83398181016040528101906200003791906200025a565b336001600081905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b55760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000ac91906200029d565b60405180910390fd5b620000c6816200012a60201b60201c565b506000600160146101000a81548160ff02191690831515021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620002ba565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200022282620001f5565b9050919050565b620002348162000215565b81146200024057600080fd5b50565b600081519050620002548162000229565b92915050565b600060208284031215620002735762000272620001f0565b5b6000620002838482850162000243565b91505092915050565b620002978162000215565b82525050565b6000602082019050620002b460008301846200028c565b92915050565b610d8280620002ca6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638456cb59116100665780638456cb59146101115780638da5cb5b1461011b578063affed0e014610139578063d718095a14610157578063f2fde38b146101735761009e565b80633cb747bf146100a35780633f4ba83a146100c1578063417763c5146100cb5780635c975abb146100e9578063715018a614610107575b600080fd5b6100ab61018f565b6040516100b8919061083c565b60405180910390f35b6100c96101b5565b005b6100d36101c7565b6040516100e09190610870565b60405180910390f35b6100f16101cd565b6040516100fe91906108a6565b60405180910390f35b61010f6101e4565b005b6101196101f8565b005b61012361020a565b60405161013091906108e2565b60405180910390f35b610141610234565b60405161014e9190610870565b60405180910390f35b610171600480360381019061016c9190610998565b61023a565b005b61018d600480360381019061018891906109f8565b61044c565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101bd6104d2565b6101c5610559565b565b61010081565b6000600160149054906101000a900460ff16905090565b6101ec6104d2565b6101f660006105bc565b565b6102006104d2565b610208610682565b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b6102426106e4565b61024a61072a565b60008282905011610290576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028790610a82565b60405180910390fd5b6101008282905011156102d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cf90610aee565b60405180910390fd5b600033905060006003549050600360008154809291906102f790610b3d565b9190505550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633dbb202b86848787866040516024016103529493929190610bd2565b604051602081830303815290604052632226f46760e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050620f42406040518463ffffffff1660e01b81526004016103b993929190610cdc565b600060405180830381600087803b1580156103d357600080fd5b505af11580156103e7573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff167f4816bdd3b9d39acdd4da0ae7412d5523081e916c6a56e481063e475b86ef7c5b85858460405161043593929190610d1a565b60405180910390a2505061044761076b565b505050565b6104546104d2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104c65760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016104bd91906108e2565b60405180910390fd5b6104cf816105bc565b50565b6104da610775565b73ffffffffffffffffffffffffffffffffffffffff166104f861020a565b73ffffffffffffffffffffffffffffffffffffffff16146105575761051b610775565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161054e91906108e2565b60405180910390fd5b565b61056161077d565b6000600160146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6105a5610775565b6040516105b291906108e2565b60405180910390a1565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61068a61072a565b60018060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586106cd610775565b6040516106da91906108e2565b60405180910390a1565b600260005403610720576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b6107326101cd565b15610769576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6001600081905550565b600033905090565b6107856101cd565b6107bb576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108026107fd6107f8846107bd565b6107dd565b6107bd565b9050919050565b6000610814826107e7565b9050919050565b600061082682610809565b9050919050565b6108368161081b565b82525050565b6000602082019050610851600083018461082d565b92915050565b6000819050919050565b61086a81610857565b82525050565b60006020820190506108856000830184610861565b92915050565b60008115159050919050565b6108a08161088b565b82525050565b60006020820190506108bb6000830184610897565b92915050565b60006108cc826107bd565b9050919050565b6108dc816108c1565b82525050565b60006020820190506108f760008301846108d3565b92915050565b600080fd5b600080fd5b610910816108c1565b811461091b57600080fd5b50565b60008135905061092d81610907565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261095857610957610933565b5b8235905067ffffffffffffffff81111561097557610974610938565b5b6020830191508360018202830111156109915761099061093d565b5b9250929050565b6000806000604084860312156109b1576109b06108fd565b5b60006109bf8682870161091e565b935050602084013567ffffffffffffffff8111156109e0576109df610902565b5b6109ec86828701610942565b92509250509250925092565b600060208284031215610a0e57610a0d6108fd565b5b6000610a1c8482850161091e565b91505092915050565b600082825260208201905092915050565b7f546578742063616e6e6f7420626520656d707479000000000000000000000000600082015250565b6000610a6c601483610a25565b9150610a7782610a36565b602082019050919050565b60006020820190508181036000830152610a9b81610a5f565b9050919050565b7f546578742065786365656473206d6178696d756d206c656e6774680000000000600082015250565b6000610ad8601b83610a25565b9150610ae382610aa2565b602082019050919050565b60006020820190508181036000830152610b0781610acb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b4882610857565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b7a57610b79610b0e565b5b600182019050919050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000610bb18385610a25565b9350610bbe838584610b85565b610bc783610b94565b840190509392505050565b6000606082019050610be760008301876108d3565b8181036020830152610bfa818587610ba5565b9050610c096040830184610861565b95945050505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c4c578082015181840152602081019050610c31565b60008484015250505050565b6000610c6382610c12565b610c6d8185610c1d565b9350610c7d818560208601610c2e565b610c8681610b94565b840191505092915050565b6000819050919050565b600063ffffffff82169050919050565b6000610cc6610cc1610cbc84610c91565b6107dd565b610c9b565b9050919050565b610cd681610cab565b82525050565b6000606082019050610cf160008301866108d3565b8181036020830152610d038185610c58565b9050610d126040830184610ccd565b949350505050565b60006040820190508181036000830152610d35818587610ba5565b9050610d446020830184610861565b94935050505056fea264697066735822122046e5d68c3f85bf52f4dd5bddb87335be835e3ebd5afad4fd62ff35acfee18ac864736f6c63430008180033";

type SenderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SenderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Sender__factory extends ContractFactory {
  constructor(...args: SenderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    l1CrossDomainMessengerAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      l1CrossDomainMessengerAddress,
      overrides || {}
    );
  }
  override deploy(
    l1CrossDomainMessengerAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      l1CrossDomainMessengerAddress,
      overrides || {}
    ) as Promise<
      Sender & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Sender__factory {
    return super.connect(runner) as Sender__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SenderInterface {
    return new Interface(_abi) as SenderInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Sender {
    return new Contract(address, _abi, runner) as unknown as Sender;
  }
}
