/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Receiver, ReceiverInterface } from "../Receiver";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "text",
        type: "string",
      },
    ],
    name: "Message",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "string",
        name: "text",
        type: "string",
      },
    ],
    name: "handleMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610286806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806349ab518214610030575b600080fd5b61004a6004803603810190610045919061016e565b61004c565b005b8273ffffffffffffffffffffffffffffffffffffffff167f811f7cff0a3374ff67cccc3726035d34ba70410e0256818a891e4d6acc01d88e838360405161009492919061022c565b60405180910390a2505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100d6826100ab565b9050919050565b6100e6816100cb565b81146100f157600080fd5b50565b600081359050610103816100dd565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261012e5761012d610109565b5b8235905067ffffffffffffffff81111561014b5761014a61010e565b5b60208301915083600182028301111561016757610166610113565b5b9250929050565b600080600060408486031215610187576101866100a1565b5b6000610195868287016100f4565b935050602084013567ffffffffffffffff8111156101b6576101b56100a6565b5b6101c286828701610118565b92509250509250925092565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b600061020b83856101ce565b93506102188385846101df565b610221836101ee565b840190509392505050565b600060208201905081810360008301526102478184866101ff565b9050939250505056fea26469706673582212207cc5e18983dd30d35761e5e3f1218054f0c6f1c2b8e9925f87b1e60f0cb2487964736f6c63430008180033";

type ReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Receiver__factory extends ContractFactory {
  constructor(...args: ReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Receiver & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Receiver__factory {
    return super.connect(runner) as Receiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReceiverInterface {
    return new Interface(_abi) as ReceiverInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Receiver {
    return new Contract(address, _abi, runner) as unknown as Receiver;
  }
}
